name: CI

on:
  push:
    branches: [ main, master, dev*, feature* ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10"]

    steps:
    - uses: actions/checkout@v3
      with:
        path: multi-agent-for-vision

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      working-directory: multi-agent-for-vision
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        python -m spacy download en_core_web_sm
        pip install -e .

    - name: Run tests with pytest
      working-directory: multi-agent-for-vision
      run: |
        pytest tests/ --cov=vision_framework --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./multi-agent-for-vision/coverage.xml
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        path: multi-agent-for-vision

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      working-directory: multi-agent-for-vision
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8 mypy

    - name: Run linting
      working-directory: multi-agent-for-vision
      run: |
        black --check vision_framework tests
        isort --check-only vision_framework tests
        flake8 vision_framework tests

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        path: multi-agent-for-vision

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install build dependencies
      working-directory: multi-agent-for-vision
      run: |
        python -m pip install --upgrade pip
        pip install build wheel

    - name: Build package
      working-directory: multi-agent-for-vision
      run: |
        python -m build

    - name: Upload package artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: multi-agent-for-vision/dist/
